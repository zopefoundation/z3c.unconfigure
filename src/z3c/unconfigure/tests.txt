Tests that are not documentation
================================

Unconfiguration and other overrides
-----------------------------------

When placing an ``unconfigure`` grouping directive in an overrides
file together with other overrides, things should continue to work
like you'd expect: the overrides directives override things and the
``unconfigure`` directive filters actions.

Let's consider this configuration:

  >>> cat('lolcat.zcml')
  <configure>
    <print msg="Hello World!" />
    <print msg="Important configuration here." />
    <lolcat who="I" canhas="cheezburger" />
    <print msg="Goodbye World!" />
    <print msg="LOL!" />
    <print msg="This is the last directive" />
  </configure>

And a file with one override and one "unconfiguration":

  >>> cat('overrides2.zcml')
  <configure>
    <lolcat who="I" canhas="hamburger" />
    <unconfigure>
      <print msg="LOL!" />
    </unconfigure>
  </configure>

It works as you'd expect:

  >>> zcml("""
  ... <configure>
  ...   <include file="lolcat.zcml" />
  ...   <includeOverrides file="overrides2.zcml" />
  ... </configure>
  ... """)
  Hello World!
  Important configuration here.
  Goodbye World!
  This is the last directive
  I can has hamburger?


Unconfiguring event handlers
----------------------------

This package also supports unconfiguring event handlers.

  >>> import zope.component.eventtesting
  >>> zope.component.eventtesting.setUp()

Consider a bunch of event handlers configured in various ways:

  >>> zcml("""
  ... <configure xmlns="http://namespaces.zope.org/zope">
  ...   <include package="zope.component" file="meta.zcml" />
  ...
  ...   <subscriber handler=".handlers.regular" />
  ...   <subscriber handler=".handlers.trusted" trusted="yes" />
  ...   <subscriber handler=".handlers.located" locate="yes" />
  ...   <subscriber handler=".handlers.locatedtrusted"
  ...               trusted="yes" locate="yes" />
  ...
  ...   <unconfigure>
  ...     <subscriber handler=".handlers.regular" />
  ...     <subscriber handler=".handlers.trusted" trusted="yes" />
  ...     <subscriber handler=".handlers.located" locate="yes" />
  ...     <subscriber handler=".handlers.locatedtrusted"
  ...                 trusted="yes" locate="yes" />
  ...   </unconfigure>
  ... </configure>
  ... """)

Since we've unconfigured the handlers, we expect that nothing will
happen when we send the event:

  >>> from zope.event import notify
  >>> from z3c.unconfigure.testfixtures.handlers import Event
  >>> notify(Event())

  >>> import zope.testing.cleanup
  >>> zope.testing.cleanup.cleanUp()

